{"ast":null,"code":"var _jsxFileName = \"/Users/stefano/0dev/react/fetchingmovies/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  function fetchMoviesHandler() {\n    setIsLoading(true);\n    fetch('https://swapi.dev/api/films').then(response => {\n      return response.json();\n    }).then(data => {\n      const transformedMovies = data.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseData: movieData.release_data\n        };\n      });\n      setMovies(transformedMovies);\n      setIsLoading(false);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMoviesHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [!isLoading && movies.length > 0 && /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 45\n      }, this), !isLoading && movies, isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading ... \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"K6Fmynn3O5MwYfimS2e7LgCybds=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/stefano/0dev/react/fetchingmovies/src/App.js"],"names":["React","useState","MoviesList","App","movies","setMovies","isLoading","setIsLoading","fetchMoviesHandler","fetch","then","response","json","data","transformedMovies","results","map","movieData","id","episode_id","title","openingText","opening_crawl","releaseData","release_data","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;;AAEA,WAASO,kBAAT,GAA8B;AAC5BD,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,KAAK,CAAC,6BAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAc;AAClB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KAHH,EAIGF,IAJH,CAISG,IAAD,IAAU;AACd,YAAMC,iBAAiB,GAAGD,IAAI,CAACE,OAAL,CAAaC,GAAb,CAAkBC,SAAD,IAAe;AACxD,eAAO;AACLC,UAAAA,EAAE,EAAED,SAAS,CAACE,UADT;AAELC,UAAAA,KAAK,EAAEH,SAAS,CAACG,KAFZ;AAGLC,UAAAA,WAAW,EAAEJ,SAAS,CAACK,aAHlB;AAILC,UAAAA,WAAW,EAAEN,SAAS,CAACO;AAJlB,SAAP;AAMD,OAPyB,CAA1B;AAQAnB,MAAAA,SAAS,CAACS,iBAAD,CAAT;AACAP,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAfH;AAgBD;;AAED,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE;AAAA,6BACE;AAAQ,QAAA,OAAO,EAAEC,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,iBACG,CAACF,SAAD,IAAcF,MAAM,CAACqB,MAAP,GAAgB,CAA9B,iBAAmC,QAAC,UAAD;AAAY,QAAA,MAAM,EAAErB;AAApB;AAAA;AAAA;AAAA;AAAA,cADtC,EAEI,CAACE,SAAD,IAAcF,MAFlB,EAGGE,SAAS,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHhB;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GApCQH,G;;KAAAA,G;AAsCT,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  function fetchMoviesHandler() {\n    setIsLoading(true);\n    fetch('https://swapi.dev/api/films')\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        const transformedMovies = data.results.map((movieData) => {\n          return {\n            id: movieData.episode_id,\n            title: movieData.title,\n            openingText: movieData.opening_crawl,\n            releaseData: movieData.release_data,\n          };\n        });\n        setMovies(transformedMovies);\n        setIsLoading(false);\n      });\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {!isLoading && movies.length > 0 && <MoviesList movies={movies} />}\n        { !isLoading && movies}\n        {isLoading && <p>Loading ... </p>}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}